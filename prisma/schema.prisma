// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Organ {
  id          String       @id @default(uuid())
  name        String
  description String?
  departments Department[]
}

model Department {
  id      String  @id @default(uuid())
  name    String
  organId String
  organ   Organ   @relation(fields: [organId], references: [id])
  staff   Staff[]
}

model JobTitle {
  id    String  @id @default(uuid())
  title String
  staff Staff[]
}

model Staff {
  id             String     @id @default(uuid())
  fullName       String
  email          String     @unique
  phone          String?
  photoUrl       String?
  jobTitleId     String
  jobTitle       JobTitle   @relation(fields: [jobTitleId], references: [id])
  departmentId   String
  department     Department @relation(fields: [departmentId], references: [id])
  reportsToId    String?
  reportsTo      Staff?     @relation("Manager", fields: [reportsToId], references: [id])
  subordinates   Staff[]    @relation("Manager")
  employmentType String
  expertise      String[]
  biography      String?
  officeLocation String?
  bioEn          String?
  bioFr          String?
  bioAr          String?
  bioPt          String?
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt
}

enum UserStatus {
  ACTIVE
  INACTIVE
  LOCKED
  DELETED
}

model User {
  id        String     @id @default(cuid())
  email     String     @unique
  name      String?
  status    UserStatus @default(ACTIVE)
  role      String
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  roles     Role[]
}

model Role {
  id          String       @id @default(cuid())
  name        String       @unique
  description String?
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  permissions Permission[]
  users       User[]
}

model Permission {
  id          String   @id @default(cuid())
  action      String
  entity      String
  access      String
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  roles       Role[]

  @@unique([action, entity, access])
}
